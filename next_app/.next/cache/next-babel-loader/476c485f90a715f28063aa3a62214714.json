{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // ステートの初期値\n\nconst initial = {\n  message: \"START\",\n  data: [],\n  number: [],\n  result: 0\n}; // レデューサー\n\nfunction calcReducer(state = initial, action) {\n  switch (action.type) {\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g, \"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n      let result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n} // init関数\n\n\nexport function initStore(state = initial) {\n  return createStore(calcReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/koharakouki/Desktop/react_practice/next_app/Store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","calcReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACfC,EAAAA,OAAO,EAAE,OADM;AAEfC,EAAAA,IAAI,EAAE,EAFS;AAGfC,EAAAA,MAAM,EAAE,EAHO;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAhB,C,CAOA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGN,OAA7B,EAAsCO,MAAtC,EAA8C;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,OAAL;AACE,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAoB,EAApB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AACA,UAAIV,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBU,GAAG,GAAG,CAAzC;AACA,aAAO;AACNb,QAAAA,OAAO,EAAE,OADH;AAENC,QAAAA,IAAI,EAAEO,KAFA;AAGNN,QAAAA,MAAM,EAAEa,OAHF;AAINZ,QAAAA,MAAM,EAAEA;AAJF,OAAP;;AAMF,SAAK,OAAL;AACE,aAAO;AACNH,QAAAA,OAAO,EAAE,OADH;AAENC,QAAAA,IAAI,EAAE,EAFA;AAGNC,QAAAA,MAAM,EAAE,EAHF;AAINC,QAAAA,MAAM,EAAE;AAJF,OAAP;;AAMF;AACE,aAAOE,KAAP;AAvBH;AAyBA,C,CAGD;;;AACA,OAAO,SAASW,SAAT,CAAmBX,KAAK,GAAGN,OAA3B,EAAoC;AAC1C,SAAOH,WAAW,CAACQ,WAAD,EAAcC,KAAd,EAAqBR,eAAe,CAACC,eAAD,CAApC,CAAlB;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n// ステートの初期値\nconst initial = {\n\tmessage: \"START\",\n\tdata: [],\n\tnumber: [],\n\tresult: 0\n}\n\n// レデューサー\nfunction calcReducer(state = initial, action) {\n\tswitch (action.type){\n\t\tcase 'ENTER':\n\t\t  let data2 = state.data.slice();\n\t\t  let s = action.value;\n\t\t  data2.unshift(s);\n\t\t  let num = s.replace(/[^0-9]/g,\"\");\n\t\t  let number2 = state.number.slice();\n\t\t  number2.unshift(num);\n\t\t  let result = (state.result * 1) + (num * 1);\n\t\t  return {\n\t\t  \tmessage: 'ENTER',\n\t\t  \tdata: data2,\n\t\t  \tnumber: number2,\n\t\t  \tresult: result\n\t\t  };\n\t\tcase 'RESET':\n\t\t  return {\n\t\t  \tmessage: 'RESET',\n\t\t  \tdata: [],\n\t\t  \tnumber: [],\n\t\t  \tresult: 0\n\t\t  };\n\t\tdefault:\n\t\t  return state;\n\t}\n}\n\n\n// init関数\nexport function initStore(state = initial) {\n\treturn createStore(calcReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}