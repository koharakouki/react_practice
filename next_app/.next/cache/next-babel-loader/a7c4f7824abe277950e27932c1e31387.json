{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; //ステート初期値\n\nvar initial = {\n  message: \"START\",\n  count: 0\n};\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: 0\n      };\n\n    default:\n      return state;\n  }\n} // initStore関数(redux-store.jsで必要)\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/koharakouki/Desktop/react_practice/next_app/Store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,IAAMC,OAAO,GAAG;AACfC,EAAAA,OAAO,EAAE,OADM;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAhB;;AAKA,SAASC,cAAT,GAAkD;AAAA,MAAzBC,KAAyB,uEAAjBJ,OAAiB;AAAA,MAARK,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACE,aAAO;AACNL,QAAAA,OAAO,EAAE,WADH;AAENC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFf,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO;AACND,QAAAA,OAAO,EAAE,WADH;AAENC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFf,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACND,QAAAA,OAAO,EAAE,OADH;AAENC,QAAAA,KAAK,EAAE;AAFD,OAAP;;AAIF;AACE,aAAOE,KAAP;AAjBH;AAmBA,C,CAGD;;;AACA,OAAO,SAASG,SAAT,GAAoC;AAAA,MAAjBH,KAAiB,uEAATJ,OAAS;AAC1C,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\n//ステート初期値\nconst initial = {\n\tmessage: \"START\",\n\tcount: 0\n}\n\nfunction counterReducer (state = initial, action) {\n\tswitch (action.type) {\n\t\tcase 'INCREMENT':\n\t\t  return {\n\t\t  \tmessage: 'INCREMENT',\n\t\t  \tcount: state.count + 1\n\t\t  };\n\t\tcase 'DECREMENT':\n\t\t  return {\n\t\t  \tmessage: 'DECREMENT',\n\t\t  \tcount: state.count - 1\n\t\t  };\n\t\tcase 'RESET':\n\t\t  return {\n\t\t  \tmessage: 'RESET',\n\t\t  \tcount: 0\n\t\t  };\n\t\tdefault:\n\t\t  return state;\n\t}\n}\n\n\n// initStore関数(redux-store.jsで必要)\nexport function initStore(state = initial) {\n\treturn createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}