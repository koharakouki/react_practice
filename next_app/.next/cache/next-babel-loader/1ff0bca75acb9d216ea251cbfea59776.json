{"ast":null,"code":"var _jsxFileName = \"/Users/koharakouki/Desktop/react_practice/next_app/components/Counter.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({\n        type: 'DECREMENT'\n      });\n    } else {\n      return this.props.dispatch({\n        type: 'INCREMENT'\n      });\n    }\n  }\n\n  reset() {\n    return this.props.dispatch({\n      type: 'RESET'\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }\n    }, this.props.message, \": \", this.props.count), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.doAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }\n    }, \"Count\"), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }\n    }, \"Reset\"));\n  }\n\n}\n\nCounter = connect(state => state)(Counter);\nexport default Counter;","map":{"version":3,"sources":["/Users/koharakouki/Desktop/react_practice/next_app/components/Counter.js"],"names":["React","Component","connect","Counter","constructor","props","fontSize","padding","doAction","bind","reset","e","shiftKey","dispatch","type","render","message","count","style","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAM/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,mCALV;AACPC,MAAAA,QAAQ,EAAE,MADH;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAKU;;AAEjB,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACA;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAG;AACV,QAAGA,CAAC,CAACC,QAAL,EAAe;AACd,aAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACA,KAFD,MAEO;AACN,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACA;AACD;;AAEDJ,EAAAA,KAAK,GAAG;AACP,WAAO,KAAKL,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApB,CAAP;AACA;;AAEDC,EAAAA,MAAM,GAAE;AACP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKV,KAAL,CAAWW,OAAf,QAA0B,KAAKX,KAAL,CAAWY,KAArC,CADF,EAEE;AAAQ,MAAA,KAAK,EAAE,KAAKC,KAApB;AAA2B,MAAA,OAAO,EAAE,KAAKV,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAKE;AAAQ,MAAA,KAAK,EAAE,KAAKU,KAApB;AAA2B,MAAA,OAAO,EAAE,KAAKR,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADD;AAWA;;AApC8B;;AAuChCP,OAAO,GAAGD,OAAO,CAAEiB,KAAD,IAASA,KAAV,CAAP,CAAwBhB,OAAxB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n\tstyle = {\n\t\tfontSize: \"12pt\",\n\t\tpadding: \"5px 15px\"\n\t}\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.doAction = this.doAction.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t}\n\n\tdoAction(e){\n\t\tif(e.shiftKey) {\n\t\t\treturn this.props.dispatch({ type: 'DECREMENT' });\n\t\t} else {\n\t\t\treturn this.props.dispatch({ type: 'INCREMENT' });\n\t\t}\n\t}\n\n\treset() {\n\t\treturn this.props.dispatch({ type: 'RESET' });\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t  <p>{this.props.message}: {this.props.count}</p>\n\t\t\t  <button style={this.style} onClick={this.doAction}>\n\t\t\t    Count\n\t\t\t  </button>\n\t\t\t  <button style={this.style} onClick={this.reset}>\n\t\t\t    Reset\n\t\t\t  </button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCounter = connect((state)=>state)(Counter);\nexport default Counter;"]},"metadata":{},"sourceType":"module"}